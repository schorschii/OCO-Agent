#! /bin/sh
### BEGIN INIT INFO
# Provides:          oco-agent
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Should-Start:      $network
# Should-Stop:       $network
# Default-Start:     2 3 4 5
# Default-Stop:      1
# Short-Description: OCO Agent
# Description:       Open Computer Orchestration - client management daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/oco-agent
NAME=oco-agent
PIDFILE=/run/$NAME.pid
OUTPUTFILE=/var/log/oco-agent.log
DESC="OCO Agent"
SCRIPTNAME=/etc/init.d/oco-agent

# Exit if the package is not installed
test -x $DAEMON || exit 0

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

startit() {
        log_daemon_msg "Starting $DESC" "$NAME"
        start-stop-daemon --start --quiet --oknodo --make-pidfile --pidfile "$PIDFILE" --background --output "$OUTPUTFILE" --exec $DAEMON -- --daemon --config /etc/oco-agent.ini
        status=$?
        log_end_msg $status
}
stopit() {
        log_daemon_msg "Stopping $DESC" "$NAME"
        start-stop-daemon --stop --quiet --retry 2 --oknodo --pidfile $PIDFILE --name $NAME
        status=$?
        log_end_msg $status
}

case "$1" in
  start)
        startit
        ;;
  stop)
        stopit
        ;;
  #reload|force-reload)
       #log_daemon_msg "Reloading $DESC" "$NAME"
       #start-stop-daemon --stop --quiet --pidfile $PIDFILE --name $NAME --signal 1
       #status=$?
       #log_end_msg $status
       #;;
  restart)
        log_daemon_msg "Restarting $DESC" "$NAME"
        if stopit; then
                startit
        fi
        status=$?
        log_end_msg $status
        ;;
  status)
        status_of_proc -p "$PIDFILE" "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|status}" >&2
        exit 3
        ;;
esac

exit 0
